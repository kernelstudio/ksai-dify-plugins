debug/
target/
__pycache__/
.venv/
runtime/*
!runtime/.gitkeep
tmp/
storage/
demos/
runtime/

/cypress/videos/
/cypress/screenshots/

/.vitepress/cache

/**/**/package-dev.json
/docker/llm-trainer-runtime
/vite.config.mjs.timestamp**
/**/**/vite.config.mjs.timestamp**
/types/components.d.ts
/public/demo.html
package-lock.json
/static/storage

.gradle/
.svn/
.git/
.idea/

models/
outputs/
cache/
llama.cpp/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb
*.trie


### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr

.vscode/

# Exclude Mac generated files
.DS_Store

# Exclude the log folder
docker/llm-trainer-runtime/
/flask_session

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
coverage
*.local

### NetBeans ###
/nbproject/private/
/build/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settingsk
.springBeans
.sts4-cache

# Editor directories and files
.vscode/*
!.vscode/extensions.json
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?